apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: azure-dev-environment
spec:
  # This Composition configures resources for the DevEnvironment XRD.
  compositeTypeRef:
    apiVersion: dev.azure.upbound.io/v1alpha1
    kind: DevEnvironment

  resources:

    # ------------------------------------------------------------------------------
    # 1) Resource Group
    # ------------------------------------------------------------------------------
    - name: resource-group
      base:
        apiVersion: azure.upbound.io/v1beta1
        kind: ResourceGroup
        metadata:
          # We'll patch in the name from spec.parameters.resourceGroup
          name: ""
        spec:
          deletionPolicy: Delete
          forProvider:
            location: ""
            tags:
              provisioner: crossplane
              developer: ""
              issue-id: ""
      patches:
        - fromFieldPath: "spec.parameters.region"
          toFieldPath: "spec.forProvider.location"
        - fromFieldPath: "spec.parameters.developer"
          toFieldPath: "spec.forProvider.tags[developer]"
        - fromFieldPath: "spec.parameters.issueId"
          toFieldPath: "spec.forProvider.tags[issue-id]"
        - fromFieldPath: "spec.parameters.resourceGroup"
          toFieldPath: "metadata.name"

    # ------------------------------------------------------------------------------
    # 2) Virtual Network
    # ------------------------------------------------------------------------------
    - name: virtual-network
      base:
        apiVersion: network.azure.upbound.io/v1beta2
        kind: VirtualNetwork
        metadata:
          # Let Crossplane handle name generation or patch if desired
        spec:
          forProvider:
            addressSpace:
              - 10.1.0.0/16
            location: ""
            resourceGroupName: ""
      patches:
        - fromFieldPath: "spec.parameters.region"
          toFieldPath: "spec.forProvider.location"
        # Force VNet to wait for RG by referencing actual resource-group name
        - type: FromResourceFieldPath
          fromResource: resource-group
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.resourceGroupName"

    # ------------------------------------------------------------------------------
    # 3) Storage Account
    # ------------------------------------------------------------------------------
    - name: storage-account
      base:
        apiVersion: storage.azure.upbound.io/v1beta1
        kind: Account
        metadata:
          name: ""
        spec:
          forProvider:
            location: ""
            resourceGroupName: ""
            accountKind: StorageV2
            accountTier: Standard
            accountReplicationType: LRS
      patches:
        # (A) Patch region -> forProvider.location
        - fromFieldPath: "spec.parameters.region"
          toFieldPath: "spec.forProvider.location"

        # (B) Wait for Resource Group creation by referencing RG name
        - type: FromResourceFieldPath
          fromResource: resource-group
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.resourceGroupName"

        # (C) Patch resourceGroup param -> metadata.name with transforms
        - fromFieldPath: "spec.parameters.storageAccountName"
          toFieldPath: "metadata.name"