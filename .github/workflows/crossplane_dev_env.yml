name: Provision Environment on Issue Open via ArgoCD Crossplane
run-name: Provision or Update Dev Env on Issue ${{ github.event.issue.number }} for ${{ github.actor }}

on:
  workflow_call:
    secrets:
      azure_credentials:
        required: true
    inputs:
      app_name:
        required: true
        type: string
      region:
        required: true
        type: string
      environment_type:
        required: true
        type: string
      unique_id:
        required: true
        type: string
      repository:
        required: true
        type: string
      issue_number:
        required: true
        type: string
      run_id:
        required: true
        type: string
      crossplane_aks_cluster:
        required: false
        type: string
      crossplane_aks_cluster_rg:
        required: false
        type: string

jobs:
  provision:
    runs-on: self-hosted
    permissions:
      contents: write
      pull-requests: write
      issues: write
    outputs:
      branch_name: ${{ steps.set_branch_name.outputs.branch_name }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: main
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      - name: Set branch name
        id: set_branch_name
        run: echo "branch_name=create-dev-env-${{ github.actor }}-${{ github.event.issue.number }}" >> $GITHUB_OUTPUT

      - name: Create and switch to a new branch
        run: |
          git checkout -b ${{ steps.set_branch_name.outputs.branch_name }}

      - name: Create or Update DevEnvironment File
        id: create_dev_env_file
        run: |
          chmod +x infrastructure/scripts/create_dev_env_file.sh
          export FILE_PATH="infrastructure/azure/dev-envs/dev-env-${{ github.actor }}-${{ github.event.issue.number }}.yaml"
          export TEMPLATE_PATH="infrastructure/azure/resources-samples/dev-env-template.yaml"
          export REGION="${{ inputs.region }}"
          export RESOURCE_GROUP="env-${{ github.actor }}-${{ github.event.issue.number }}-rg"
          export STORAGE_ACCOUNT_NAME="$(LC_ALL=C tr -dc 'a-z0-9' < /dev/urandom | head -c 16)"
          infrastructure/scripts/create_dev_env_file.sh
    
          echo "file_path=$FILE_PATH" >> $GITHUB_OUTPUT
     

      - name: Stage, Commit, and Push Changes
        run: |
          git add .
          git commit -m "Add DevEnvironment file for ${{ github.actor }} (Issue #${{ github.event.issue.number }})"
          git push --set-upstream origin ${{ steps.set_branch_name.outputs.branch_name }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.set_branch_name.outputs.branch_name }}
          base: "main"
          title: "Dev environment fortr ${{ github.actor }} (Issue #${{ github.event.issue.number }})"
          body: |
            This PR adds a new or updated DevEnvironment file for #${{ github.event.issue.number }}.
            Once merged, ArgoCD will deploy or update the environment.
          draft: false
